(function() {var implementors = {
"embedded_hal":[["impl Eq for <a class=\"enum\" href=\"embedded_hal/digital/enum.ErrorKind.html\" title=\"enum embedded_hal::digital::ErrorKind\">ErrorKind</a>"],["impl Eq for <a class=\"enum\" href=\"embedded_hal/digital/enum.PinState.html\" title=\"enum embedded_hal::digital::PinState\">PinState</a>"],["impl Eq for <a class=\"enum\" href=\"embedded_hal/i2c/enum.ErrorKind.html\" title=\"enum embedded_hal::i2c::ErrorKind\">ErrorKind</a>"],["impl Eq for <a class=\"enum\" href=\"embedded_hal/i2c/enum.NoAcknowledgeSource.html\" title=\"enum embedded_hal::i2c::NoAcknowledgeSource\">NoAcknowledgeSource</a>"],["impl Eq for <a class=\"enum\" href=\"embedded_hal/pwm/enum.ErrorKind.html\" title=\"enum embedded_hal::pwm::ErrorKind\">ErrorKind</a>"],["impl Eq for <a class=\"enum\" href=\"embedded_hal/spi/enum.ErrorKind.html\" title=\"enum embedded_hal::spi::ErrorKind\">ErrorKind</a>"],["impl Eq for <a class=\"enum\" href=\"embedded_hal/spi/enum.Phase.html\" title=\"enum embedded_hal::spi::Phase\">Phase</a>"],["impl Eq for <a class=\"enum\" href=\"embedded_hal/spi/enum.Polarity.html\" title=\"enum embedded_hal::spi::Polarity\">Polarity</a>"],["impl Eq for <a class=\"struct\" href=\"embedded_hal/spi/struct.Mode.html\" title=\"struct embedded_hal::spi::Mode\">Mode</a>"],["impl&lt;'a&gt; Eq for <a class=\"enum\" href=\"embedded_hal/i2c/enum.Operation.html\" title=\"enum embedded_hal::i2c::Operation\">Operation</a>&lt;'a&gt;"],["impl&lt;'a, Word: Eq + 'static&gt; Eq for <a class=\"enum\" href=\"embedded_hal/spi/enum.Operation.html\" title=\"enum embedded_hal::spi::Operation\">Operation</a>&lt;'a, Word&gt;"]],
"enumset":[["impl&lt;T: Eq + <a class=\"trait\" href=\"enumset/trait.EnumSetType.html\" title=\"trait enumset::EnumSetType\">EnumSetType</a>&gt; Eq for <a class=\"struct\" href=\"enumset/struct.EnumSet.html\" title=\"struct enumset::EnumSet\">EnumSet</a>&lt;T&gt;<div class=\"where\">where\n    T::Repr: Eq,</div>"]],
"esp32p4":[["impl Eq for <a class=\"enum\" href=\"esp32p4/enum.Interrupt.html\" title=\"enum esp32p4::Interrupt\">Interrupt</a>"]],
"esp_hal":[["impl Eq for <a class=\"enum\" href=\"esp_hal/enum.Cpu.html\" title=\"enum esp_hal::Cpu\">Cpu</a>"],["impl Eq for <a class=\"enum\" href=\"esp_hal/interrupt/enum.Error.html\" title=\"enum esp_hal::interrupt::Error\">Error</a>"]],
"fugit":[["impl&lt;const NOM: u32, const DENOM: u32&gt; Eq for <a class=\"struct\" href=\"fugit/struct.Duration.html\" title=\"struct fugit::Duration\">Duration</a>&lt;u32, NOM, DENOM&gt;"],["impl&lt;const NOM: u32, const DENOM: u32&gt; Eq for <a class=\"struct\" href=\"fugit/struct.Duration.html\" title=\"struct fugit::Duration\">Duration</a>&lt;u64, NOM, DENOM&gt;"],["impl&lt;const NOM: u32, const DENOM: u32&gt; Eq for <a class=\"struct\" href=\"fugit/struct.Instant.html\" title=\"struct fugit::Instant\">Instant</a>&lt;u32, NOM, DENOM&gt;"],["impl&lt;const NOM: u32, const DENOM: u32&gt; Eq for <a class=\"struct\" href=\"fugit/struct.Instant.html\" title=\"struct fugit::Instant\">Instant</a>&lt;u64, NOM, DENOM&gt;"],["impl&lt;const NOM: u32, const DENOM: u32&gt; Eq for <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;u32, NOM, DENOM&gt;"],["impl&lt;const NOM: u32, const DENOM: u32&gt; Eq for <a class=\"struct\" href=\"fugit/struct.Rate.html\" title=\"struct fugit::Rate\">Rate</a>&lt;u64, NOM, DENOM&gt;"]],
"nb":[["impl&lt;E: Eq&gt; Eq for <a class=\"enum\" href=\"nb/enum.Error.html\" title=\"enum nb::Error\">Error</a>&lt;E&gt;"]],
"riscv":[["impl Eq for <a class=\"enum\" href=\"riscv/register/mcause/enum.Exception.html\" title=\"enum riscv::register::mcause::Exception\">Exception</a>"],["impl Eq for <a class=\"enum\" href=\"riscv/register/mcause/enum.Interrupt.html\" title=\"enum riscv::register::mcause::Interrupt\">Interrupt</a>"],["impl Eq for <a class=\"enum\" href=\"riscv/register/mcause/enum.Trap.html\" title=\"enum riscv::register::mcause::Trap\">Trap</a>"],["impl Eq for <a class=\"enum\" href=\"riscv/register/misa/enum.XLEN.html\" title=\"enum riscv::register::misa::XLEN\">XLEN</a>"],["impl Eq for <a class=\"enum\" href=\"riscv/register/mstatus/enum.Endianness.html\" title=\"enum riscv::register::mstatus::Endianness\">Endianness</a>"],["impl Eq for <a class=\"enum\" href=\"riscv/register/mstatus/enum.FS.html\" title=\"enum riscv::register::mstatus::FS\">FS</a>"],["impl Eq for <a class=\"enum\" href=\"riscv/register/mstatus/enum.MPP.html\" title=\"enum riscv::register::mstatus::MPP\">MPP</a>"],["impl Eq for <a class=\"enum\" href=\"riscv/register/mstatus/enum.SPP.html\" title=\"enum riscv::register::mstatus::SPP\">SPP</a>"],["impl Eq for <a class=\"enum\" href=\"riscv/register/mstatus/enum.XS.html\" title=\"enum riscv::register::mstatus::XS\">XS</a>"],["impl Eq for <a class=\"enum\" href=\"riscv/register/mtvec/enum.TrapMode.html\" title=\"enum riscv::register::mtvec::TrapMode\">TrapMode</a>"],["impl Eq for <a class=\"enum\" href=\"riscv/register/satp/enum.Mode.html\" title=\"enum riscv::register::satp::Mode\">Mode</a>"],["impl Eq for <a class=\"enum\" href=\"riscv/register/scause/enum.Exception.html\" title=\"enum riscv::register::scause::Exception\">Exception</a>"],["impl Eq for <a class=\"enum\" href=\"riscv/register/scause/enum.Interrupt.html\" title=\"enum riscv::register::scause::Interrupt\">Interrupt</a>"],["impl Eq for <a class=\"enum\" href=\"riscv/register/scause/enum.Trap.html\" title=\"enum riscv::register::scause::Trap\">Trap</a>"],["impl Eq for <a class=\"enum\" href=\"riscv/register/sstatus/enum.SPP.html\" title=\"enum riscv::register::sstatus::SPP\">SPP</a>"]],
"strum":[["impl Eq for <a class=\"enum\" href=\"strum/enum.ParseError.html\" title=\"enum strum::ParseError\">ParseError</a>"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()