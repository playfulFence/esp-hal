(function() {var type_impls = {
"esp32":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FieldWriter%3C'a,+REG,+WI,+FI,+Safe%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/esp32/generic.rs.html#357-387\">source</a><a href=\"#impl-FieldWriter%3C'a,+REG,+WI,+FI,+Safe%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;'a, REG, const WI: u8, FI&gt; <a class=\"type\" href=\"esp32/generic/type.FieldWriterSafe.html\" title=\"type esp32::generic::FieldWriterSafe\">FieldWriterSafe</a>&lt;'a, REG, WI, FI&gt;<div class=\"where\">where\n    REG: <a class=\"trait\" href=\"esp32/generic/trait.Writable.html\" title=\"trait esp32::generic::Writable\">Writable</a> + <a class=\"trait\" href=\"esp32/generic/trait.RegisterSpec.html\" title=\"trait esp32::generic::RegisterSpec\">RegisterSpec</a>,\n    FI: <a class=\"trait\" href=\"esp32/generic/trait.FieldSpec.html\" title=\"trait esp32::generic::FieldSpec\">FieldSpec</a>,\n    REG::<a class=\"associatedtype\" href=\"esp32/generic/trait.RegisterSpec.html#associatedtype.Ux\" title=\"type esp32::generic::RegisterSpec::Ux\">Ux</a>: From&lt;FI::<a class=\"associatedtype\" href=\"esp32/generic/trait.FieldSpec.html#associatedtype.Ux\" title=\"type esp32::generic::FieldSpec::Ux\">Ux</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.WIDTH\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/esp32/generic.rs.html#364\">source</a><h4 class=\"code-header\">pub const <a href=\"esp32/generic/type.FieldWriterSafe.html#associatedconstant.WIDTH\" class=\"constant\">WIDTH</a>: u8 = WI</h4></section></summary><div class=\"docblock\"><p>Field width</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.width\" class=\"method\"><a class=\"src rightside\" href=\"src/esp32/generic.rs.html#367-369\">source</a><h4 class=\"code-header\">pub const fn <a href=\"esp32/generic/type.FieldWriterSafe.html#tymethod.width\" class=\"fn\">width</a>(&amp;self) -&gt; u8</h4></section></summary><div class=\"docblock\"><p>Field width</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.offset\" class=\"method\"><a class=\"src rightside\" href=\"src/esp32/generic.rs.html#372-374\">source</a><h4 class=\"code-header\">pub const fn <a href=\"esp32/generic/type.FieldWriterSafe.html#tymethod.offset\" class=\"fn\">offset</a>(&amp;self) -&gt; u8</h4></section></summary><div class=\"docblock\"><p>Field offset</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bits\" class=\"method\"><a class=\"src rightside\" href=\"src/esp32/generic.rs.html#377-381\">source</a><h4 class=\"code-header\">pub fn <a href=\"esp32/generic/type.FieldWriterSafe.html#tymethod.bits\" class=\"fn\">bits</a>(self, value: FI::<a class=\"associatedtype\" href=\"esp32/generic/trait.FieldSpec.html#associatedtype.Ux\" title=\"type esp32::generic::FieldSpec::Ux\">Ux</a>) -&gt; &amp;'a mut <a class=\"type\" href=\"esp32/generic/type.W.html\" title=\"type esp32::generic::W\">W</a>&lt;REG&gt;</h4></section></summary><div class=\"docblock\"><p>Writes raw bits to the field</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.variant\" class=\"method\"><a class=\"src rightside\" href=\"src/esp32/generic.rs.html#384-386\">source</a><h4 class=\"code-header\">pub fn <a href=\"esp32/generic/type.FieldWriterSafe.html#tymethod.variant\" class=\"fn\">variant</a>(self, variant: FI) -&gt; &amp;'a mut <a class=\"type\" href=\"esp32/generic/type.W.html\" title=\"type esp32::generic::W\">W</a>&lt;REG&gt;</h4></section></summary><div class=\"docblock\"><p>Writes <code>variant</code> to the field</p>\n</div></details></div></details>",0,"esp32::rtc_cntl::clk_conf::CK8M_DIV_W","esp32::rtc_cntl::clk_conf::SOC_CLK_SEL_W","esp32::timg0::wdtconfig0::WDT_SYS_RESET_LENGTH_W","esp32::timg0::wdtconfig0::WDT_CPU_RESET_LENGTH_W","esp32::timg0::wdtconfig0::WDT_STG3_W"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()