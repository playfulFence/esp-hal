(function() {var type_impls = {
"fugit":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3CDuration%3Cu32,+NOM,+DENOM%3E%3E-for-Instant%3Cu32,+NOM,+DENOM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fugit/instant.rs.html#355\">source</a><a href=\"#impl-Add%3CDuration%3Cu32,+NOM,+DENOM%3E%3E-for-Instant%3Cu32,+NOM,+DENOM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const NOM: u32, const DENOM: u32&gt; Add&lt;<a class=\"struct\" href=\"fugit/struct.Duration.html\" title=\"struct fugit::Duration\">Duration</a>&lt;u32, NOM, DENOM&gt;&gt; for <a class=\"struct\" href=\"fugit/struct.Instant.html\" title=\"struct fugit::Instant\">Instant</a>&lt;u32, NOM, DENOM&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fugit/struct.Instant.html\" title=\"struct fugit::Instant\">Instant</a>&lt;u32, NOM, DENOM&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fugit/instant.rs.html#355\">source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">add</a>(self, other: <a class=\"struct\" href=\"fugit/struct.Duration.html\" title=\"struct fugit::Duration\">Duration</a>&lt;u32, NOM, DENOM&gt;) -&gt; Self::Output</h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a>Read more</a></div></details></div></details>","Add<Duration<u32, NOM, DENOM>>","fugit::aliases::TimerInstant","fugit::aliases::TimerInstantU32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3CDuration%3Cu32,+NOM,+DENOM%3E%3E-for-Instant%3Cu64,+NOM,+DENOM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fugit/instant.rs.html#398-411\">source</a><a href=\"#impl-Add%3CDuration%3Cu32,+NOM,+DENOM%3E%3E-for-Instant%3Cu64,+NOM,+DENOM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const NOM: u32, const DENOM: u32&gt; Add&lt;<a class=\"struct\" href=\"fugit/struct.Duration.html\" title=\"struct fugit::Duration\">Duration</a>&lt;u32, NOM, DENOM&gt;&gt; for <a class=\"struct\" href=\"fugit/struct.Instant.html\" title=\"struct fugit::Instant\">Instant</a>&lt;u64, NOM, DENOM&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fugit/struct.Instant.html\" title=\"struct fugit::Instant\">Instant</a>&lt;u64, NOM, DENOM&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fugit/instant.rs.html#404-410\">source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">add</a>(self, other: <a class=\"struct\" href=\"fugit/struct.Duration.html\" title=\"struct fugit::Duration\">Duration</a>&lt;u32, NOM, DENOM&gt;) -&gt; Self::Output</h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a>Read more</a></div></details></div></details>","Add<Duration<u32, NOM, DENOM>>","fugit::aliases::TimerInstant","fugit::aliases::TimerInstantU64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3CDuration%3Cu64,+NOM,+DENOM%3E%3E-for-Instant%3Cu64,+NOM,+DENOM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fugit/instant.rs.html#356\">source</a><a href=\"#impl-Add%3CDuration%3Cu64,+NOM,+DENOM%3E%3E-for-Instant%3Cu64,+NOM,+DENOM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const NOM: u32, const DENOM: u32&gt; Add&lt;<a class=\"struct\" href=\"fugit/struct.Duration.html\" title=\"struct fugit::Duration\">Duration</a>&lt;u64, NOM, DENOM&gt;&gt; for <a class=\"struct\" href=\"fugit/struct.Instant.html\" title=\"struct fugit::Instant\">Instant</a>&lt;u64, NOM, DENOM&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fugit/struct.Instant.html\" title=\"struct fugit::Instant\">Instant</a>&lt;u64, NOM, DENOM&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fugit/instant.rs.html#356\">source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">add</a>(self, other: <a class=\"struct\" href=\"fugit/struct.Duration.html\" title=\"struct fugit::Duration\">Duration</a>&lt;u64, NOM, DENOM&gt;) -&gt; Self::Output</h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a>Read more</a></div></details></div></details>","Add<Duration<u64, NOM, DENOM>>","fugit::aliases::TimerInstant","fugit::aliases::TimerInstantU64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign%3CDuration%3Cu32,+NOM,+DENOM%3E%3E-for-Instant%3Cu32,+NOM,+DENOM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fugit/instant.rs.html#355\">source</a><a href=\"#impl-AddAssign%3CDuration%3Cu32,+NOM,+DENOM%3E%3E-for-Instant%3Cu32,+NOM,+DENOM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const NOM: u32, const DENOM: u32&gt; AddAssign&lt;<a class=\"struct\" href=\"fugit/struct.Duration.html\" title=\"struct fugit::Duration\">Duration</a>&lt;u32, NOM, DENOM&gt;&gt; for <a class=\"struct\" href=\"fugit/struct.Instant.html\" title=\"struct fugit::Instant\">Instant</a>&lt;u32, NOM, DENOM&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fugit/instant.rs.html#355\">source</a><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">add_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"fugit/struct.Duration.html\" title=\"struct fugit::Duration\">Duration</a>&lt;u32, NOM, DENOM&gt;)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a>Read more</a></div></details></div></details>","AddAssign<Duration<u32, NOM, DENOM>>","fugit::aliases::TimerInstant","fugit::aliases::TimerInstantU32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign%3CDuration%3Cu32,+NOM,+DENOM%3E%3E-for-Instant%3Cu64,+NOM,+DENOM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fugit/instant.rs.html#417-424\">source</a><a href=\"#impl-AddAssign%3CDuration%3Cu32,+NOM,+DENOM%3E%3E-for-Instant%3Cu64,+NOM,+DENOM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const NOM: u32, const DENOM: u32&gt; AddAssign&lt;<a class=\"struct\" href=\"fugit/struct.Duration.html\" title=\"struct fugit::Duration\">Duration</a>&lt;u32, NOM, DENOM&gt;&gt; for <a class=\"struct\" href=\"fugit/struct.Instant.html\" title=\"struct fugit::Instant\">Instant</a>&lt;u64, NOM, DENOM&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fugit/instant.rs.html#421-423\">source</a><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">add_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"fugit/struct.Duration.html\" title=\"struct fugit::Duration\">Duration</a>&lt;u32, NOM, DENOM&gt;)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a>Read more</a></div></details></div></details>","AddAssign<Duration<u32, NOM, DENOM>>","fugit::aliases::TimerInstant","fugit::aliases::TimerInstantU64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign%3CDuration%3Cu64,+NOM,+DENOM%3E%3E-for-Instant%3Cu64,+NOM,+DENOM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fugit/instant.rs.html#356\">source</a><a href=\"#impl-AddAssign%3CDuration%3Cu64,+NOM,+DENOM%3E%3E-for-Instant%3Cu64,+NOM,+DENOM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const NOM: u32, const DENOM: u32&gt; AddAssign&lt;<a class=\"struct\" href=\"fugit/struct.Duration.html\" title=\"struct fugit::Duration\">Duration</a>&lt;u64, NOM, DENOM&gt;&gt; for <a class=\"struct\" href=\"fugit/struct.Instant.html\" title=\"struct fugit::Instant\">Instant</a>&lt;u64, NOM, DENOM&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fugit/instant.rs.html#356\">source</a><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">add_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"fugit/struct.Duration.html\" title=\"struct fugit::Duration\">Duration</a>&lt;u64, NOM, DENOM&gt;)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a>Read more</a></div></details></div></details>","AddAssign<Duration<u64, NOM, DENOM>>","fugit::aliases::TimerInstant","fugit::aliases::TimerInstantU64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Instant%3CT,+NOM,+DENOM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fugit/instant.rs.html#10\">source</a><a href=\"#impl-Clone-for-Instant%3CT,+NOM,+DENOM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: Clone, const NOM: u32, const DENOM: u32&gt; Clone for <a class=\"struct\" href=\"fugit/struct.Instant.html\" title=\"struct fugit::Instant\">Instant</a>&lt;T, NOM, DENOM&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fugit/instant.rs.html#10\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"fugit/struct.Instant.html\" title=\"struct fugit::Instant\">Instant</a>&lt;T, NOM, DENOM&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"since rightside\" title=\"Stable since Rust version 1.0.0\">1.0.0</span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a>Read more</a></div></details></div></details>","Clone","fugit::aliases::TimerInstant","fugit::aliases::TimerInstantU32","fugit::aliases::TimerInstantU64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Instant%3CT,+NOM,+DENOM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fugit/instant.rs.html#10\">source</a><a href=\"#impl-Debug-for-Instant%3CT,+NOM,+DENOM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: Debug, const NOM: u32, const DENOM: u32&gt; Debug for <a class=\"struct\" href=\"fugit/struct.Instant.html\" title=\"struct fugit::Instant\">Instant</a>&lt;T, NOM, DENOM&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fugit/instant.rs.html#10\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">fmt</a>(&amp;self, f: &amp;mut Formatter&lt;'_&gt;) -&gt; Result</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a>Read more</a></div></details></div></details>","Debug","fugit::aliases::TimerInstant","fugit::aliases::TimerInstantU32","fugit::aliases::TimerInstantU64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-Instant%3Cu32,+NOM,+DENOM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fugit/instant.rs.html#355\">source</a><a href=\"#impl-Display-for-Instant%3Cu32,+NOM,+DENOM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const NOM: u32, const DENOM: u32&gt; Display for <a class=\"struct\" href=\"fugit/struct.Instant.html\" title=\"struct fugit::Instant\">Instant</a>&lt;u32, NOM, DENOM&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fugit/instant.rs.html#355\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">fmt</a>(&amp;self, f: &amp;mut Formatter&lt;'_&gt;) -&gt; Result</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a>Read more</a></div></details></div></details>","Display","fugit::aliases::TimerInstant","fugit::aliases::TimerInstantU32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-Instant%3Cu64,+NOM,+DENOM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fugit/instant.rs.html#356\">source</a><a href=\"#impl-Display-for-Instant%3Cu64,+NOM,+DENOM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const NOM: u32, const DENOM: u32&gt; Display for <a class=\"struct\" href=\"fugit/struct.Instant.html\" title=\"struct fugit::Instant\">Instant</a>&lt;u64, NOM, DENOM&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fugit/instant.rs.html#356\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">fmt</a>(&amp;self, f: &amp;mut Formatter&lt;'_&gt;) -&gt; Result</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a>Read more</a></div></details></div></details>","Display","fugit::aliases::TimerInstant","fugit::aliases::TimerInstantU64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Instant%3Cu32,+NOM,+DENOM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fugit/instant.rs.html#355\">source</a><a href=\"#impl-Instant%3Cu32,+NOM,+DENOM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const NOM: u32, const DENOM: u32&gt; <a class=\"struct\" href=\"fugit/struct.Instant.html\" title=\"struct fugit::Instant\">Instant</a>&lt;u32, NOM, DENOM&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_ticks\" class=\"method\"><a class=\"src rightside\" href=\"src/fugit/instant.rs.html#355\">source</a><h4 class=\"code-header\">pub const fn <a href=\"fugit/struct.Instant.html#tymethod.from_ticks\" class=\"fn\">from_ticks</a>(ticks: u32) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create an <code>Instant</code> from a ticks value.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>_i = Instant::&lt;u32, <span class=\"number\">1</span>, <span class=\"number\">1_000</span>&gt;::from_ticks(<span class=\"number\">1</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ticks\" class=\"method\"><a class=\"src rightside\" href=\"src/fugit/instant.rs.html#355\">source</a><h4 class=\"code-header\">pub const fn <a href=\"fugit/struct.Instant.html#tymethod.ticks\" class=\"fn\">ticks</a>(&amp;self) -&gt; u32</h4></section></summary><div class=\"docblock\"><p>Extract the ticks from an <code>Instant</code>.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>i = Instant::&lt;u32, <span class=\"number\">1</span>, <span class=\"number\">1_000</span>&gt;::from_ticks(<span class=\"number\">234</span>);\n\n<span class=\"macro\">assert_eq!</span>(i.ticks(), <span class=\"number\">234</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.const_cmp\" class=\"method\"><a class=\"src rightside\" href=\"src/fugit/instant.rs.html#355\">source</a><h4 class=\"code-header\">pub const fn <a href=\"fugit/struct.Instant.html#tymethod.const_cmp\" class=\"fn\">const_cmp</a>(self, other: Self) -&gt; Ordering</h4></section></summary><div class=\"docblock\"><p>Const comparison of <code>Instant</code>s.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>i1 = Instant::&lt;u32, <span class=\"number\">1</span>, <span class=\"number\">1_000</span>&gt;::from_ticks(<span class=\"number\">1</span>);\n<span class=\"kw\">let </span>i2 = Instant::&lt;u32, <span class=\"number\">1</span>, <span class=\"number\">1_000</span>&gt;::from_ticks(<span class=\"number\">2</span>);\n\n<span class=\"macro\">assert_eq!</span>(i1.const_cmp(i2), core::cmp::Ordering::Less);</code></pre></div>\n<p>This function takes into account that ticks might wrap around. If the absolute\nvalues of <code>self</code> and <code>other</code> differ by more than half the possible range, it is\nassumed that an overflow occured and the result is reversed:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>i1 = Instant::&lt;u32, <span class=\"number\">1</span>, <span class=\"number\">1_000</span>&gt;::from_ticks(u32::MAX);\n<span class=\"kw\">let </span>i2 = Instant::&lt;u32, <span class=\"number\">1</span>, <span class=\"number\">1_000</span>&gt;::from_ticks(<span class=\"number\">1</span>);\n\n<span class=\"macro\">assert_eq!</span>(i1.const_cmp(i2), core::cmp::Ordering::Less);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.duration_since_epoch\" class=\"method\"><a class=\"src rightside\" href=\"src/fugit/instant.rs.html#355\">source</a><h4 class=\"code-header\">pub const fn <a href=\"fugit/struct.Instant.html#tymethod.duration_since_epoch\" class=\"fn\">duration_since_epoch</a>(self) -&gt; <a class=\"struct\" href=\"fugit/struct.Duration.html\" title=\"struct fugit::Duration\">Duration</a>&lt;u32, NOM, DENOM&gt;</h4></section></summary><div class=\"docblock\"><p>Duration between since the start of the <code>Instant</code>. This assumes an instant which\nwon’t wrap within the execution of the program.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>i = Instant::&lt;u32, <span class=\"number\">1</span>, <span class=\"number\">1_000</span>&gt;::from_ticks(<span class=\"number\">11</span>);\n\n<span class=\"macro\">assert_eq!</span>(i.duration_since_epoch().ticks(), <span class=\"number\">11</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_duration_since\" class=\"method\"><a class=\"src rightside\" href=\"src/fugit/instant.rs.html#355\">source</a><h4 class=\"code-header\">pub const fn <a href=\"fugit/struct.Instant.html#tymethod.checked_duration_since\" class=\"fn\">checked_duration_since</a>(\n    self,\n    other: Self\n) -&gt; Option&lt;<a class=\"struct\" href=\"fugit/struct.Duration.html\" title=\"struct fugit::Duration\">Duration</a>&lt;u32, NOM, DENOM&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Duration between <code>Instant</code>s.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>i1 = Instant::&lt;u32, <span class=\"number\">1</span>, <span class=\"number\">1_000</span>&gt;::from_ticks(<span class=\"number\">1</span>);\n<span class=\"kw\">let </span>i2 = Instant::&lt;u32, <span class=\"number\">1</span>, <span class=\"number\">1_000</span>&gt;::from_ticks(<span class=\"number\">2</span>);\n\n<span class=\"macro\">assert_eq!</span>(i1.checked_duration_since(i2), <span class=\"prelude-val\">None</span>);\n<span class=\"macro\">assert_eq!</span>(i2.checked_duration_since(i1).unwrap().ticks(), <span class=\"number\">1</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_sub_duration\" class=\"method\"><a class=\"src rightside\" href=\"src/fugit/instant.rs.html#355\">source</a><h4 class=\"code-header\">pub const fn <a href=\"fugit/struct.Instant.html#tymethod.checked_sub_duration\" class=\"fn\">checked_sub_duration</a>&lt;const O_NOM: u32, const O_DENOM: u32&gt;(\n    self,\n    other: <a class=\"struct\" href=\"fugit/struct.Duration.html\" title=\"struct fugit::Duration\">Duration</a>&lt;u32, O_NOM, O_DENOM&gt;\n) -&gt; Option&lt;Self&gt;</h4></section></summary><div class=\"docblock\"><p>Subtract a <code>Duration</code> from an <code>Instant</code> while checking for overflow.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>i = Instant::&lt;u32, <span class=\"number\">1</span>, <span class=\"number\">1_000</span>&gt;::from_ticks(<span class=\"number\">1</span>);\n<span class=\"kw\">let </span>d = Duration::&lt;u32, <span class=\"number\">1</span>, <span class=\"number\">1_000</span>&gt;::from_ticks(<span class=\"number\">1</span>);\n\n<span class=\"macro\">assert_eq!</span>(i.checked_sub_duration(d).unwrap().ticks(), <span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_add_duration\" class=\"method\"><a class=\"src rightside\" href=\"src/fugit/instant.rs.html#355\">source</a><h4 class=\"code-header\">pub const fn <a href=\"fugit/struct.Instant.html#tymethod.checked_add_duration\" class=\"fn\">checked_add_duration</a>&lt;const O_NOM: u32, const O_DENOM: u32&gt;(\n    self,\n    other: <a class=\"struct\" href=\"fugit/struct.Duration.html\" title=\"struct fugit::Duration\">Duration</a>&lt;u32, O_NOM, O_DENOM&gt;\n) -&gt; Option&lt;Self&gt;</h4></section></summary><div class=\"docblock\"><p>Add a <code>Duration</code> to an <code>Instant</code> while checking for overflow.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>i = Instant::&lt;u32, <span class=\"number\">1</span>, <span class=\"number\">1_000</span>&gt;::from_ticks(<span class=\"number\">1</span>);\n<span class=\"kw\">let </span>d = Duration::&lt;u32, <span class=\"number\">1</span>, <span class=\"number\">1_000</span>&gt;::from_ticks(<span class=\"number\">1</span>);\n\n<span class=\"macro\">assert_eq!</span>(i.checked_add_duration(d).unwrap().ticks(), <span class=\"number\">2</span>);</code></pre></div>\n</div></details></div></details>",0,"fugit::aliases::TimerInstant","fugit::aliases::TimerInstantU32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Instant%3Cu64,+NOM,+DENOM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fugit/instant.rs.html#356\">source</a><a href=\"#impl-Instant%3Cu64,+NOM,+DENOM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const NOM: u32, const DENOM: u32&gt; <a class=\"struct\" href=\"fugit/struct.Instant.html\" title=\"struct fugit::Instant\">Instant</a>&lt;u64, NOM, DENOM&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_ticks\" class=\"method\"><a class=\"src rightside\" href=\"src/fugit/instant.rs.html#356\">source</a><h4 class=\"code-header\">pub const fn <a href=\"fugit/struct.Instant.html#tymethod.from_ticks\" class=\"fn\">from_ticks</a>(ticks: u64) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create an <code>Instant</code> from a ticks value.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>_i = Instant::&lt;u64, <span class=\"number\">1</span>, <span class=\"number\">1_000</span>&gt;::from_ticks(<span class=\"number\">1</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ticks\" class=\"method\"><a class=\"src rightside\" href=\"src/fugit/instant.rs.html#356\">source</a><h4 class=\"code-header\">pub const fn <a href=\"fugit/struct.Instant.html#tymethod.ticks\" class=\"fn\">ticks</a>(&amp;self) -&gt; u64</h4></section></summary><div class=\"docblock\"><p>Extract the ticks from an <code>Instant</code>.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>i = Instant::&lt;u64, <span class=\"number\">1</span>, <span class=\"number\">1_000</span>&gt;::from_ticks(<span class=\"number\">234</span>);\n\n<span class=\"macro\">assert_eq!</span>(i.ticks(), <span class=\"number\">234</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.const_cmp\" class=\"method\"><a class=\"src rightside\" href=\"src/fugit/instant.rs.html#356\">source</a><h4 class=\"code-header\">pub const fn <a href=\"fugit/struct.Instant.html#tymethod.const_cmp\" class=\"fn\">const_cmp</a>(self, other: Self) -&gt; Ordering</h4></section></summary><div class=\"docblock\"><p>Const comparison of <code>Instant</code>s.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>i1 = Instant::&lt;u64, <span class=\"number\">1</span>, <span class=\"number\">1_000</span>&gt;::from_ticks(<span class=\"number\">1</span>);\n<span class=\"kw\">let </span>i2 = Instant::&lt;u64, <span class=\"number\">1</span>, <span class=\"number\">1_000</span>&gt;::from_ticks(<span class=\"number\">2</span>);\n\n<span class=\"macro\">assert_eq!</span>(i1.const_cmp(i2), core::cmp::Ordering::Less);</code></pre></div>\n<p>This function takes into account that ticks might wrap around. If the absolute\nvalues of <code>self</code> and <code>other</code> differ by more than half the possible range, it is\nassumed that an overflow occured and the result is reversed:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>i1 = Instant::&lt;u64, <span class=\"number\">1</span>, <span class=\"number\">1_000</span>&gt;::from_ticks(u64::MAX);\n<span class=\"kw\">let </span>i2 = Instant::&lt;u64, <span class=\"number\">1</span>, <span class=\"number\">1_000</span>&gt;::from_ticks(<span class=\"number\">1</span>);\n\n<span class=\"macro\">assert_eq!</span>(i1.const_cmp(i2), core::cmp::Ordering::Less);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.duration_since_epoch\" class=\"method\"><a class=\"src rightside\" href=\"src/fugit/instant.rs.html#356\">source</a><h4 class=\"code-header\">pub const fn <a href=\"fugit/struct.Instant.html#tymethod.duration_since_epoch\" class=\"fn\">duration_since_epoch</a>(self) -&gt; <a class=\"struct\" href=\"fugit/struct.Duration.html\" title=\"struct fugit::Duration\">Duration</a>&lt;u64, NOM, DENOM&gt;</h4></section></summary><div class=\"docblock\"><p>Duration between since the start of the <code>Instant</code>. This assumes an instant which\nwon’t wrap within the execution of the program.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>i = Instant::&lt;u64, <span class=\"number\">1</span>, <span class=\"number\">1_000</span>&gt;::from_ticks(<span class=\"number\">11</span>);\n\n<span class=\"macro\">assert_eq!</span>(i.duration_since_epoch().ticks(), <span class=\"number\">11</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_duration_since\" class=\"method\"><a class=\"src rightside\" href=\"src/fugit/instant.rs.html#356\">source</a><h4 class=\"code-header\">pub const fn <a href=\"fugit/struct.Instant.html#tymethod.checked_duration_since\" class=\"fn\">checked_duration_since</a>(\n    self,\n    other: Self\n) -&gt; Option&lt;<a class=\"struct\" href=\"fugit/struct.Duration.html\" title=\"struct fugit::Duration\">Duration</a>&lt;u64, NOM, DENOM&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Duration between <code>Instant</code>s.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>i1 = Instant::&lt;u64, <span class=\"number\">1</span>, <span class=\"number\">1_000</span>&gt;::from_ticks(<span class=\"number\">1</span>);\n<span class=\"kw\">let </span>i2 = Instant::&lt;u64, <span class=\"number\">1</span>, <span class=\"number\">1_000</span>&gt;::from_ticks(<span class=\"number\">2</span>);\n\n<span class=\"macro\">assert_eq!</span>(i1.checked_duration_since(i2), <span class=\"prelude-val\">None</span>);\n<span class=\"macro\">assert_eq!</span>(i2.checked_duration_since(i1).unwrap().ticks(), <span class=\"number\">1</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_sub_duration\" class=\"method\"><a class=\"src rightside\" href=\"src/fugit/instant.rs.html#356\">source</a><h4 class=\"code-header\">pub const fn <a href=\"fugit/struct.Instant.html#tymethod.checked_sub_duration\" class=\"fn\">checked_sub_duration</a>&lt;const O_NOM: u32, const O_DENOM: u32&gt;(\n    self,\n    other: <a class=\"struct\" href=\"fugit/struct.Duration.html\" title=\"struct fugit::Duration\">Duration</a>&lt;u64, O_NOM, O_DENOM&gt;\n) -&gt; Option&lt;Self&gt;</h4></section></summary><div class=\"docblock\"><p>Subtract a <code>Duration</code> from an <code>Instant</code> while checking for overflow.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>i = Instant::&lt;u64, <span class=\"number\">1</span>, <span class=\"number\">1_000</span>&gt;::from_ticks(<span class=\"number\">1</span>);\n<span class=\"kw\">let </span>d = Duration::&lt;u64, <span class=\"number\">1</span>, <span class=\"number\">1_000</span>&gt;::from_ticks(<span class=\"number\">1</span>);\n\n<span class=\"macro\">assert_eq!</span>(i.checked_sub_duration(d).unwrap().ticks(), <span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_add_duration\" class=\"method\"><a class=\"src rightside\" href=\"src/fugit/instant.rs.html#356\">source</a><h4 class=\"code-header\">pub const fn <a href=\"fugit/struct.Instant.html#tymethod.checked_add_duration\" class=\"fn\">checked_add_duration</a>&lt;const O_NOM: u32, const O_DENOM: u32&gt;(\n    self,\n    other: <a class=\"struct\" href=\"fugit/struct.Duration.html\" title=\"struct fugit::Duration\">Duration</a>&lt;u64, O_NOM, O_DENOM&gt;\n) -&gt; Option&lt;Self&gt;</h4></section></summary><div class=\"docblock\"><p>Add a <code>Duration</code> to an <code>Instant</code> while checking for overflow.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>i = Instant::&lt;u64, <span class=\"number\">1</span>, <span class=\"number\">1_000</span>&gt;::from_ticks(<span class=\"number\">1</span>);\n<span class=\"kw\">let </span>d = Duration::&lt;u64, <span class=\"number\">1</span>, <span class=\"number\">1_000</span>&gt;::from_ticks(<span class=\"number\">1</span>);\n\n<span class=\"macro\">assert_eq!</span>(i.checked_add_duration(d).unwrap().ticks(), <span class=\"number\">2</span>);</code></pre></div>\n</div></details></div></details>",0,"fugit::aliases::TimerInstant","fugit::aliases::TimerInstantU64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-Instant%3Cu32,+NOM,+DENOM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fugit/instant.rs.html#355\">source</a><a href=\"#impl-Ord-for-Instant%3Cu32,+NOM,+DENOM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const NOM: u32, const DENOM: u32&gt; Ord for <a class=\"struct\" href=\"fugit/struct.Instant.html\" title=\"struct fugit::Instant\">Instant</a>&lt;u32, NOM, DENOM&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fugit/instant.rs.html#355\">source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">cmp</a>(&amp;self, other: &amp;Self) -&gt; Ordering</h4></section></summary><div class=\"docblock\"><p>This implementation deviates from the definition of\n<a href=\"core::cmp::Ord::cmp\">Ord::cmp</a>:</p>\n<p>It takes into account that ticks might wrap around. If the absolute\nvalues of <code>self</code> and <code>other</code> differ by more than half the possible range, it is\nassumed that an overflow occured and the result is reversed.</p>\n<p>That breaks the transitivity invariant: a &lt; b and b &lt; c no longer implies a &lt; c.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"since rightside\" title=\"Stable since Rust version 1.21.0\">1.21.0</span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">max</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: Sized,</div></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"since rightside\" title=\"Stable since Rust version 1.21.0\">1.21.0</span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">min</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: Sized,</div></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"since rightside\" title=\"Stable since Rust version 1.50.0\">1.50.0</span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<div class=\"where\">where\n    Self: Sized + PartialOrd,</div></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a>Read more</a></div></details></div></details>","Ord","fugit::aliases::TimerInstant","fugit::aliases::TimerInstantU32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-Instant%3Cu64,+NOM,+DENOM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fugit/instant.rs.html#356\">source</a><a href=\"#impl-Ord-for-Instant%3Cu64,+NOM,+DENOM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const NOM: u32, const DENOM: u32&gt; Ord for <a class=\"struct\" href=\"fugit/struct.Instant.html\" title=\"struct fugit::Instant\">Instant</a>&lt;u64, NOM, DENOM&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fugit/instant.rs.html#356\">source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">cmp</a>(&amp;self, other: &amp;Self) -&gt; Ordering</h4></section></summary><div class=\"docblock\"><p>This implementation deviates from the definition of\n<a href=\"core::cmp::Ord::cmp\">Ord::cmp</a>:</p>\n<p>It takes into account that ticks might wrap around. If the absolute\nvalues of <code>self</code> and <code>other</code> differ by more than half the possible range, it is\nassumed that an overflow occured and the result is reversed.</p>\n<p>That breaks the transitivity invariant: a &lt; b and b &lt; c no longer implies a &lt; c.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"since rightside\" title=\"Stable since Rust version 1.21.0\">1.21.0</span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">max</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: Sized,</div></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"since rightside\" title=\"Stable since Rust version 1.21.0\">1.21.0</span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">min</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: Sized,</div></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"since rightside\" title=\"Stable since Rust version 1.50.0\">1.50.0</span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<div class=\"where\">where\n    Self: Sized + PartialOrd,</div></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a>Read more</a></div></details></div></details>","Ord","fugit::aliases::TimerInstant","fugit::aliases::TimerInstantU64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Instant%3Cu32,+NOM,+DENOM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fugit/instant.rs.html#355\">source</a><a href=\"#impl-PartialEq-for-Instant%3Cu32,+NOM,+DENOM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const NOM: u32, const DENOM: u32&gt; PartialEq for <a class=\"struct\" href=\"fugit/struct.Instant.html\" title=\"struct fugit::Instant\">Instant</a>&lt;u32, NOM, DENOM&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fugit/instant.rs.html#355\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">eq</a>(&amp;self, other: &amp;Self) -&gt; bool</h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"since rightside\" title=\"Stable since Rust version 1.0.0\">1.0.0</span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">ne</a>(&amp;self, other: &amp;Rhs) -&gt; bool</h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","fugit::aliases::TimerInstant","fugit::aliases::TimerInstantU32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Instant%3Cu64,+NOM,+DENOM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fugit/instant.rs.html#356\">source</a><a href=\"#impl-PartialEq-for-Instant%3Cu64,+NOM,+DENOM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const NOM: u32, const DENOM: u32&gt; PartialEq for <a class=\"struct\" href=\"fugit/struct.Instant.html\" title=\"struct fugit::Instant\">Instant</a>&lt;u64, NOM, DENOM&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fugit/instant.rs.html#356\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">eq</a>(&amp;self, other: &amp;Self) -&gt; bool</h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"since rightside\" title=\"Stable since Rust version 1.0.0\">1.0.0</span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">ne</a>(&amp;self, other: &amp;Rhs) -&gt; bool</h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","fugit::aliases::TimerInstant","fugit::aliases::TimerInstantU64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-Instant%3Cu32,+NOM,+DENOM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fugit/instant.rs.html#355\">source</a><a href=\"#impl-PartialOrd-for-Instant%3Cu32,+NOM,+DENOM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const NOM: u32, const DENOM: u32&gt; PartialOrd for <a class=\"struct\" href=\"fugit/struct.Instant.html\" title=\"struct fugit::Instant\">Instant</a>&lt;u32, NOM, DENOM&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fugit/instant.rs.html#355\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;Self) -&gt; Option&lt;Ordering&gt;</h4></section></summary><div class=\"docblock\"><p>This implementation deviates from the definition of\n<a href=\"core::cmp::PartialOrd::partial_cmp\">PartialOrd::partial_cmp</a>:</p>\n<p>It takes into account that ticks might wrap around. If the absolute\nvalues of <code>self</code> and <code>other</code> differ by more than half the possible range, it is\nassumed that an overflow occured and the result is reversed.</p>\n<p>That breaks the transitivity invariant: a &lt; b and b &lt; c no longer implies a &lt; c.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"since rightside\" title=\"Stable since Rust version 1.0.0\">1.0.0</span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">lt</a>(&amp;self, other: &amp;Rhs) -&gt; bool</h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"since rightside\" title=\"Stable since Rust version 1.0.0\">1.0.0</span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">le</a>(&amp;self, other: &amp;Rhs) -&gt; bool</h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"since rightside\" title=\"Stable since Rust version 1.0.0\">1.0.0</span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">gt</a>(&amp;self, other: &amp;Rhs) -&gt; bool</h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"since rightside\" title=\"Stable since Rust version 1.0.0\">1.0.0</span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">ge</a>(&amp;self, other: &amp;Rhs) -&gt; bool</h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a>Read more</a></div></details></div></details>","PartialOrd","fugit::aliases::TimerInstant","fugit::aliases::TimerInstantU32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-Instant%3Cu64,+NOM,+DENOM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fugit/instant.rs.html#356\">source</a><a href=\"#impl-PartialOrd-for-Instant%3Cu64,+NOM,+DENOM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const NOM: u32, const DENOM: u32&gt; PartialOrd for <a class=\"struct\" href=\"fugit/struct.Instant.html\" title=\"struct fugit::Instant\">Instant</a>&lt;u64, NOM, DENOM&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fugit/instant.rs.html#356\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;Self) -&gt; Option&lt;Ordering&gt;</h4></section></summary><div class=\"docblock\"><p>This implementation deviates from the definition of\n<a href=\"core::cmp::PartialOrd::partial_cmp\">PartialOrd::partial_cmp</a>:</p>\n<p>It takes into account that ticks might wrap around. If the absolute\nvalues of <code>self</code> and <code>other</code> differ by more than half the possible range, it is\nassumed that an overflow occured and the result is reversed.</p>\n<p>That breaks the transitivity invariant: a &lt; b and b &lt; c no longer implies a &lt; c.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"since rightside\" title=\"Stable since Rust version 1.0.0\">1.0.0</span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">lt</a>(&amp;self, other: &amp;Rhs) -&gt; bool</h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"since rightside\" title=\"Stable since Rust version 1.0.0\">1.0.0</span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">le</a>(&amp;self, other: &amp;Rhs) -&gt; bool</h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"since rightside\" title=\"Stable since Rust version 1.0.0\">1.0.0</span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">gt</a>(&amp;self, other: &amp;Rhs) -&gt; bool</h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"since rightside\" title=\"Stable since Rust version 1.0.0\">1.0.0</span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">ge</a>(&amp;self, other: &amp;Rhs) -&gt; bool</h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a>Read more</a></div></details></div></details>","PartialOrd","fugit::aliases::TimerInstant","fugit::aliases::TimerInstantU64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3CDuration%3Cu32,+NOM,+DENOM%3E%3E-for-Instant%3Cu32,+NOM,+DENOM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fugit/instant.rs.html#355\">source</a><a href=\"#impl-Sub%3CDuration%3Cu32,+NOM,+DENOM%3E%3E-for-Instant%3Cu32,+NOM,+DENOM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const NOM: u32, const DENOM: u32&gt; Sub&lt;<a class=\"struct\" href=\"fugit/struct.Duration.html\" title=\"struct fugit::Duration\">Duration</a>&lt;u32, NOM, DENOM&gt;&gt; for <a class=\"struct\" href=\"fugit/struct.Instant.html\" title=\"struct fugit::Instant\">Instant</a>&lt;u32, NOM, DENOM&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fugit/struct.Instant.html\" title=\"struct fugit::Instant\">Instant</a>&lt;u32, NOM, DENOM&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fugit/instant.rs.html#355\">source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">sub</a>(self, other: <a class=\"struct\" href=\"fugit/struct.Duration.html\" title=\"struct fugit::Duration\">Duration</a>&lt;u32, NOM, DENOM&gt;) -&gt; Self::Output</h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a>Read more</a></div></details></div></details>","Sub<Duration<u32, NOM, DENOM>>","fugit::aliases::TimerInstant","fugit::aliases::TimerInstantU32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3CDuration%3Cu32,+NOM,+DENOM%3E%3E-for-Instant%3Cu64,+NOM,+DENOM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fugit/instant.rs.html#366-379\">source</a><a href=\"#impl-Sub%3CDuration%3Cu32,+NOM,+DENOM%3E%3E-for-Instant%3Cu64,+NOM,+DENOM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const NOM: u32, const DENOM: u32&gt; Sub&lt;<a class=\"struct\" href=\"fugit/struct.Duration.html\" title=\"struct fugit::Duration\">Duration</a>&lt;u32, NOM, DENOM&gt;&gt; for <a class=\"struct\" href=\"fugit/struct.Instant.html\" title=\"struct fugit::Instant\">Instant</a>&lt;u64, NOM, DENOM&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fugit/struct.Instant.html\" title=\"struct fugit::Instant\">Instant</a>&lt;u64, NOM, DENOM&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fugit/instant.rs.html#372-378\">source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">sub</a>(self, other: <a class=\"struct\" href=\"fugit/struct.Duration.html\" title=\"struct fugit::Duration\">Duration</a>&lt;u32, NOM, DENOM&gt;) -&gt; Self::Output</h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a>Read more</a></div></details></div></details>","Sub<Duration<u32, NOM, DENOM>>","fugit::aliases::TimerInstant","fugit::aliases::TimerInstantU64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3CDuration%3Cu64,+NOM,+DENOM%3E%3E-for-Instant%3Cu64,+NOM,+DENOM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fugit/instant.rs.html#356\">source</a><a href=\"#impl-Sub%3CDuration%3Cu64,+NOM,+DENOM%3E%3E-for-Instant%3Cu64,+NOM,+DENOM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const NOM: u32, const DENOM: u32&gt; Sub&lt;<a class=\"struct\" href=\"fugit/struct.Duration.html\" title=\"struct fugit::Duration\">Duration</a>&lt;u64, NOM, DENOM&gt;&gt; for <a class=\"struct\" href=\"fugit/struct.Instant.html\" title=\"struct fugit::Instant\">Instant</a>&lt;u64, NOM, DENOM&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fugit/struct.Instant.html\" title=\"struct fugit::Instant\">Instant</a>&lt;u64, NOM, DENOM&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fugit/instant.rs.html#356\">source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">sub</a>(self, other: <a class=\"struct\" href=\"fugit/struct.Duration.html\" title=\"struct fugit::Duration\">Duration</a>&lt;u64, NOM, DENOM&gt;) -&gt; Self::Output</h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a>Read more</a></div></details></div></details>","Sub<Duration<u64, NOM, DENOM>>","fugit::aliases::TimerInstant","fugit::aliases::TimerInstantU64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub-for-Instant%3Cu32,+NOM,+DENOM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fugit/instant.rs.html#355\">source</a><a href=\"#impl-Sub-for-Instant%3Cu32,+NOM,+DENOM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const NOM: u32, const DENOM: u32&gt; Sub for <a class=\"struct\" href=\"fugit/struct.Instant.html\" title=\"struct fugit::Instant\">Instant</a>&lt;u32, NOM, DENOM&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fugit/struct.Duration.html\" title=\"struct fugit::Duration\">Duration</a>&lt;u32, NOM, DENOM&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fugit/instant.rs.html#355\">source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">sub</a>(self, other: Self) -&gt; Self::Output</h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a>Read more</a></div></details></div></details>","Sub","fugit::aliases::TimerInstant","fugit::aliases::TimerInstantU32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub-for-Instant%3Cu64,+NOM,+DENOM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fugit/instant.rs.html#356\">source</a><a href=\"#impl-Sub-for-Instant%3Cu64,+NOM,+DENOM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const NOM: u32, const DENOM: u32&gt; Sub for <a class=\"struct\" href=\"fugit/struct.Instant.html\" title=\"struct fugit::Instant\">Instant</a>&lt;u64, NOM, DENOM&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"fugit/struct.Duration.html\" title=\"struct fugit::Duration\">Duration</a>&lt;u64, NOM, DENOM&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fugit/instant.rs.html#356\">source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">sub</a>(self, other: Self) -&gt; Self::Output</h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a>Read more</a></div></details></div></details>","Sub","fugit::aliases::TimerInstant","fugit::aliases::TimerInstantU64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign%3CDuration%3Cu32,+NOM,+DENOM%3E%3E-for-Instant%3Cu32,+NOM,+DENOM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fugit/instant.rs.html#355\">source</a><a href=\"#impl-SubAssign%3CDuration%3Cu32,+NOM,+DENOM%3E%3E-for-Instant%3Cu32,+NOM,+DENOM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const NOM: u32, const DENOM: u32&gt; SubAssign&lt;<a class=\"struct\" href=\"fugit/struct.Duration.html\" title=\"struct fugit::Duration\">Duration</a>&lt;u32, NOM, DENOM&gt;&gt; for <a class=\"struct\" href=\"fugit/struct.Instant.html\" title=\"struct fugit::Instant\">Instant</a>&lt;u32, NOM, DENOM&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fugit/instant.rs.html#355\">source</a><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">sub_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"fugit/struct.Duration.html\" title=\"struct fugit::Duration\">Duration</a>&lt;u32, NOM, DENOM&gt;)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a>Read more</a></div></details></div></details>","SubAssign<Duration<u32, NOM, DENOM>>","fugit::aliases::TimerInstant","fugit::aliases::TimerInstantU32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign%3CDuration%3Cu32,+NOM,+DENOM%3E%3E-for-Instant%3Cu64,+NOM,+DENOM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fugit/instant.rs.html#385-392\">source</a><a href=\"#impl-SubAssign%3CDuration%3Cu32,+NOM,+DENOM%3E%3E-for-Instant%3Cu64,+NOM,+DENOM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const NOM: u32, const DENOM: u32&gt; SubAssign&lt;<a class=\"struct\" href=\"fugit/struct.Duration.html\" title=\"struct fugit::Duration\">Duration</a>&lt;u32, NOM, DENOM&gt;&gt; for <a class=\"struct\" href=\"fugit/struct.Instant.html\" title=\"struct fugit::Instant\">Instant</a>&lt;u64, NOM, DENOM&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fugit/instant.rs.html#389-391\">source</a><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">sub_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"fugit/struct.Duration.html\" title=\"struct fugit::Duration\">Duration</a>&lt;u32, NOM, DENOM&gt;)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a>Read more</a></div></details></div></details>","SubAssign<Duration<u32, NOM, DENOM>>","fugit::aliases::TimerInstant","fugit::aliases::TimerInstantU64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign%3CDuration%3Cu64,+NOM,+DENOM%3E%3E-for-Instant%3Cu64,+NOM,+DENOM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fugit/instant.rs.html#356\">source</a><a href=\"#impl-SubAssign%3CDuration%3Cu64,+NOM,+DENOM%3E%3E-for-Instant%3Cu64,+NOM,+DENOM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const NOM: u32, const DENOM: u32&gt; SubAssign&lt;<a class=\"struct\" href=\"fugit/struct.Duration.html\" title=\"struct fugit::Duration\">Duration</a>&lt;u64, NOM, DENOM&gt;&gt; for <a class=\"struct\" href=\"fugit/struct.Instant.html\" title=\"struct fugit::Instant\">Instant</a>&lt;u64, NOM, DENOM&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/fugit/instant.rs.html#356\">source</a><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">sub_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"fugit/struct.Duration.html\" title=\"struct fugit::Duration\">Duration</a>&lt;u64, NOM, DENOM&gt;)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a>Read more</a></div></details></div></details>","SubAssign<Duration<u64, NOM, DENOM>>","fugit::aliases::TimerInstant","fugit::aliases::TimerInstantU64"],["<section id=\"impl-Copy-for-Instant%3CT,+NOM,+DENOM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fugit/instant.rs.html#10\">source</a><a href=\"#impl-Copy-for-Instant%3CT,+NOM,+DENOM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: Copy, const NOM: u32, const DENOM: u32&gt; Copy for <a class=\"struct\" href=\"fugit/struct.Instant.html\" title=\"struct fugit::Instant\">Instant</a>&lt;T, NOM, DENOM&gt;</h3></section>","Copy","fugit::aliases::TimerInstant","fugit::aliases::TimerInstantU32","fugit::aliases::TimerInstantU64"],["<section id=\"impl-Eq-for-Instant%3Cu32,+NOM,+DENOM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fugit/instant.rs.html#355\">source</a><a href=\"#impl-Eq-for-Instant%3Cu32,+NOM,+DENOM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const NOM: u32, const DENOM: u32&gt; Eq for <a class=\"struct\" href=\"fugit/struct.Instant.html\" title=\"struct fugit::Instant\">Instant</a>&lt;u32, NOM, DENOM&gt;</h3></section>","Eq","fugit::aliases::TimerInstant","fugit::aliases::TimerInstantU32"],["<section id=\"impl-Eq-for-Instant%3Cu64,+NOM,+DENOM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/fugit/instant.rs.html#356\">source</a><a href=\"#impl-Eq-for-Instant%3Cu64,+NOM,+DENOM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const NOM: u32, const DENOM: u32&gt; Eq for <a class=\"struct\" href=\"fugit/struct.Instant.html\" title=\"struct fugit::Instant\">Instant</a>&lt;u64, NOM, DENOM&gt;</h3></section>","Eq","fugit::aliases::TimerInstant","fugit::aliases::TimerInstantU64"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()