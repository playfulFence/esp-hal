(function() {var type_impls = {
"critical_section":[],
"embedded_hal":[],
"esp_hal":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FieldSpec-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"src/esp32c2/generic.rs.html#39\">source</a><a href=\"#impl-FieldSpec-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"esp32c2/generic/trait.FieldSpec.html\" title=\"trait esp32c2::generic::FieldSpec\">FieldSpec</a> for u8</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Ux\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Ux\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"esp32c2/generic/trait.FieldSpec.html#associatedtype.Ux\" class=\"associatedtype\">Ux</a> = u8</h4></section></summary><div class='docblock'>Raw field type (<code>u8</code>, <code>u16</code>, <code>u32</code>, …).</div></details></div></details>","FieldSpec","esp_hal::soc::implementation::gpio::OutputSignalType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RawReg-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"src/esp32c2/generic.rs.html#39\">source</a><a href=\"#impl-RawReg-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"esp32c2/generic/trait.RawReg.html\" title=\"trait esp32c2::generic::RawReg\">RawReg</a> for u8</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mask\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/esp32c2/generic.rs.html#39\">source</a><a href=\"#method.mask\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"esp32c2/generic/trait.RawReg.html#tymethod.mask\" class=\"fn\">mask</a>&lt;const WI: u8&gt;() -&gt; u8</h4></section></summary><div class='docblock'>Mask for bits of width <code>WI</code></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/esp32c2/generic.rs.html#39\">source</a><a href=\"#method.one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"esp32c2/generic/trait.RawReg.html#tymethod.one\" class=\"fn\">one</a>() -&gt; u8</h4></section></summary><div class='docblock'>Mask for bits of width 1</div></details></div></details>","RawReg","esp_hal::soc::implementation::gpio::OutputSignalType"],["<section id=\"impl-Word-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"src/embedded_dma/lib.rs.html#124\">source</a><a href=\"#impl-Word-for-u8\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"esp_hal/prelude/trait._embedded_dma_Word.html\" title=\"trait esp_hal::prelude::_embedded_dma_Word\">Word</a> for u8</h3></section>","Word","esp_hal::soc::implementation::gpio::OutputSignalType"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()