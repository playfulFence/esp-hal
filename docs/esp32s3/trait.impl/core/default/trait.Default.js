(function() {var implementors = {
"byteorder":[["impl Default for <a class=\"enum\" href=\"byteorder/enum.LittleEndian.html\" title=\"enum byteorder::LittleEndian\">LittleEndian</a>"],["impl Default for <a class=\"enum\" href=\"byteorder/enum.BigEndian.html\" title=\"enum byteorder::BigEndian\">BigEndian</a>"]],
"enumset":[["impl&lt;T: <a class=\"trait\" href=\"enumset/trait.EnumSetType.html\" title=\"trait enumset::EnumSetType\">EnumSetType</a>&gt; Default for <a class=\"struct\" href=\"enumset/struct.EnumSet.html\" title=\"struct enumset::EnumSet\">EnumSet</a>&lt;T&gt;"]],
"esp_hal":[["impl Default for <a class=\"enum\" href=\"esp_hal/lcd_cam/lcd/enum.Phase.html\" title=\"enum esp_hal::lcd_cam::lcd::Phase\">Phase</a>"],["impl Default for <a class=\"enum\" href=\"esp_hal/lcd_cam/lcd/enum.DelayMode.html\" title=\"enum esp_hal::lcd_cam::lcd::DelayMode\">DelayMode</a>"],["impl Default for <a class=\"struct\" href=\"esp_hal/lcd_cam/lcd/i8080/struct.Config.html\" title=\"struct esp_hal::lcd_cam::lcd::i8080::Config\">Config</a>"],["impl Default for <a class=\"struct\" href=\"esp_hal/pcnt/channel/struct.Config.html\" title=\"struct esp_hal::pcnt::channel::Config\">Config</a>"],["impl Default for <a class=\"struct\" href=\"esp_hal/lcd_cam/lcd/struct.ClockMode.html\" title=\"struct esp_hal::lcd_cam::lcd::ClockMode\">ClockMode</a>"],["impl Default for <a class=\"enum\" href=\"esp_hal/pcnt/channel/enum.CtrlMode.html\" title=\"enum esp_hal::pcnt::channel::CtrlMode\">CtrlMode</a>"],["impl Default for <a class=\"enum\" href=\"esp_hal/rtc_cntl/sleep/enum.WakeupLevel.html\" title=\"enum esp_hal::rtc_cntl::sleep::WakeupLevel\">WakeupLevel</a>"],["impl Default for <a class=\"struct\" href=\"esp_hal/rom/md5/struct.Context.html\" title=\"struct esp_hal::rom::md5::Context\">Context</a>"],["impl Default for <a class=\"struct\" href=\"esp_hal/rtc_cntl/sleep/struct.WakeTriggers.html\" title=\"struct esp_hal::rtc_cntl::sleep::WakeTriggers\">WakeTriggers</a>"],["impl Default for <a class=\"struct\" href=\"esp_hal/rmt/struct.RxChannelConfig.html\" title=\"struct esp_hal::rmt::RxChannelConfig\">RxChannelConfig</a>"],["impl Default for <a class=\"enum\" href=\"esp_hal/lcd_cam/lcd/enum.Polarity.html\" title=\"enum esp_hal::lcd_cam::lcd::Polarity\">Polarity</a>"],["impl Default for <a class=\"enum\" href=\"esp_hal/pcnt/channel/enum.EdgeMode.html\" title=\"enum esp_hal::pcnt::channel::EdgeMode\">EdgeMode</a>"],["impl&lt;TG&gt; Default for <a class=\"struct\" href=\"esp_hal/timer/struct.Wdt.html\" title=\"struct esp_hal::timer::Wdt\">Wdt</a>&lt;TG&gt;<div class=\"where\">where\n    TG: <a class=\"trait\" href=\"esp_hal/timer/trait.TimerGroupInstance.html\" title=\"trait esp_hal::timer::TimerGroupInstance\">TimerGroupInstance</a>,</div>"],["impl Default for <a class=\"struct\" href=\"esp_hal/rtc_cntl/struct.Swd.html\" title=\"struct esp_hal::rtc_cntl::Swd\">Swd</a>"],["impl Default for <a class=\"enum\" href=\"esp_hal/lcd_cam/enum.ByteOrder.html\" title=\"enum esp_hal::lcd_cam::ByteOrder\">ByteOrder</a>"],["impl Default for <a class=\"enum\" href=\"esp_hal/lcd_cam/enum.BitOrder.html\" title=\"enum esp_hal::lcd_cam::BitOrder\">BitOrder</a>"],["impl Default for <a class=\"struct\" href=\"esp_hal/pcnt/unit/struct.Config.html\" title=\"struct esp_hal::pcnt::unit::Config\">Config</a>"],["impl Default for <a class=\"struct\" href=\"esp_hal/rtc_cntl/struct.Rwdt.html\" title=\"struct esp_hal::rtc_cntl::Rwdt\">Rwdt</a>"],["impl Default for <a class=\"struct\" href=\"esp_hal/uart/config/struct.Config.html\" title=\"struct esp_hal::uart::config::Config\">Config</a>"],["impl Default for <a class=\"struct\" href=\"esp_hal/rtc_cntl/sleep/struct.TimerWakeupSource.html\" title=\"struct esp_hal::rtc_cntl::sleep::TimerWakeupSource\">TimerWakeupSource</a>"],["impl Default for <a class=\"struct\" href=\"esp_hal/rmt/struct.PulseCode.html\" title=\"struct esp_hal::rmt::PulseCode\">PulseCode</a>"],["impl Default for <a class=\"struct\" href=\"esp_hal/rmt/struct.TxChannelConfig.html\" title=\"struct esp_hal::rmt::TxChannelConfig\">TxChannelConfig</a>"],["impl Default for <a class=\"enum\" href=\"esp_hal/pcnt/unit/enum.ZeroMode.html\" title=\"enum esp_hal::pcnt::unit::ZeroMode\">ZeroMode</a>"],["impl&lt;ADCI&gt; Default for <a class=\"struct\" href=\"esp_hal/analog/adc/struct.AdcConfig.html\" title=\"struct esp_hal::analog::adc::AdcConfig\">AdcConfig</a>&lt;ADCI&gt;"],["impl Default for <a class=\"struct\" href=\"esp_hal/rtc_cntl/sleep/struct.RtcSleepConfig.html\" title=\"struct esp_hal::rtc_cntl::sleep::RtcSleepConfig\">RtcSleepConfig</a>"],["impl Default for <a class=\"struct\" href=\"esp_hal/pcnt/unit/struct.Events.html\" title=\"struct esp_hal::pcnt::unit::Events\">Events</a>"]],
"hash32":[["impl Default for <a class=\"struct\" href=\"hash32/struct.FnvHasher.html\" title=\"struct hash32::FnvHasher\">Hasher</a>"],["impl&lt;H&gt; Default for <a class=\"struct\" href=\"hash32/struct.BuildHasherDefault.html\" title=\"struct hash32::BuildHasherDefault\">BuildHasherDefault</a>&lt;H&gt;<div class=\"where\">where\n    H: Default + <a class=\"trait\" href=\"hash32/trait.Hasher.html\" title=\"trait hash32::Hasher\">Hasher</a>,</div>"],["impl Default for <a class=\"struct\" href=\"hash32/struct.Murmur3Hasher.html\" title=\"struct hash32::Murmur3Hasher\">Hasher</a>"]],
"heapless":[["impl&lt;const N: usize&gt; Default for <a class=\"struct\" href=\"heapless/struct.String.html\" title=\"struct heapless::String\">String</a>&lt;N&gt;"],["impl&lt;T, S, const N: usize&gt; Default for <a class=\"struct\" href=\"heapless/struct.IndexSet.html\" title=\"struct heapless::IndexSet\">IndexSet</a>&lt;T, S, N&gt;<div class=\"where\">where\n    T: Eq + <a class=\"trait\" href=\"hash32/trait.Hash.html\" title=\"trait hash32::Hash\">Hash</a>,\n    S: <a class=\"trait\" href=\"hash32/trait.BuildHasher.html\" title=\"trait hash32::BuildHasher\">BuildHasher</a> + Default,</div>"],["impl&lt;K, V, const N: usize&gt; Default for <a class=\"struct\" href=\"heapless/struct.LinearMap.html\" title=\"struct heapless::LinearMap\">LinearMap</a>&lt;K, V, N&gt;<div class=\"where\">where\n    K: Eq,</div>"],["impl&lt;T, const N: usize&gt; Default for <a class=\"struct\" href=\"heapless/struct.HistoryBuffer.html\" title=\"struct heapless::HistoryBuffer\">HistoryBuffer</a>&lt;T, N&gt;"],["impl&lt;K, V, S, const N: usize&gt; Default for <a class=\"struct\" href=\"heapless/struct.IndexMap.html\" title=\"struct heapless::IndexMap\">IndexMap</a>&lt;K, V, S, N&gt;<div class=\"where\">where\n    K: Eq + <a class=\"trait\" href=\"hash32/trait.Hash.html\" title=\"trait hash32::Hash\">Hash</a>,\n    S: <a class=\"trait\" href=\"hash32/trait.BuildHasher.html\" title=\"trait hash32::BuildHasher\">BuildHasher</a> + Default,</div>"],["impl&lt;T, const N: usize&gt; Default for <a class=\"struct\" href=\"heapless/mpmc/struct.MpMcQueue.html\" title=\"struct heapless::mpmc::MpMcQueue\">MpMcQueue</a>&lt;T, N&gt;"],["impl&lt;T, K, const N: usize&gt; Default for <a class=\"struct\" href=\"heapless/binary_heap/struct.BinaryHeap.html\" title=\"struct heapless::binary_heap::BinaryHeap\">BinaryHeap</a>&lt;T, K, N&gt;<div class=\"where\">where\n    T: Ord,\n    K: <a class=\"trait\" href=\"heapless/binary_heap/trait.Kind.html\" title=\"trait heapless::binary_heap::Kind\">Kind</a>,</div>"],["impl&lt;T, const N: usize&gt; Default for <a class=\"struct\" href=\"heapless/struct.Deque.html\" title=\"struct heapless::Deque\">Deque</a>&lt;T, N&gt;"],["impl&lt;T, const N: usize&gt; Default for <a class=\"struct\" href=\"heapless/spsc/struct.Queue.html\" title=\"struct heapless::spsc::Queue\">Queue</a>&lt;T, N&gt;"],["impl&lt;T, const N: usize&gt; Default for <a class=\"struct\" href=\"heapless/struct.Vec.html\" title=\"struct heapless::Vec\">Vec</a>&lt;T, N&gt;"]],
"lock_api":[["impl&lt;R: <a class=\"trait\" href=\"lock_api/trait.RawRwLock.html\" title=\"trait lock_api::RawRwLock\">RawRwLock</a>, T: ?Sized + Default&gt; Default for <a class=\"struct\" href=\"lock_api/struct.RwLock.html\" title=\"struct lock_api::RwLock\">RwLock</a>&lt;R, T&gt;"],["impl&lt;R: <a class=\"trait\" href=\"lock_api/trait.RawMutex.html\" title=\"trait lock_api::RawMutex\">RawMutex</a>, T: ?Sized + Default&gt; Default for <a class=\"struct\" href=\"lock_api/struct.Mutex.html\" title=\"struct lock_api::Mutex\">Mutex</a>&lt;R, T&gt;"],["impl&lt;R: <a class=\"trait\" href=\"lock_api/trait.RawMutex.html\" title=\"trait lock_api::RawMutex\">RawMutex</a>, G: <a class=\"trait\" href=\"lock_api/trait.GetThreadId.html\" title=\"trait lock_api::GetThreadId\">GetThreadId</a>, T: ?Sized + Default&gt; Default for <a class=\"struct\" href=\"lock_api/struct.ReentrantMutex.html\" title=\"struct lock_api::ReentrantMutex\">ReentrantMutex</a>&lt;R, G, T&gt;"]],
"portable_atomic":[["impl Default for <a class=\"struct\" href=\"portable_atomic/struct.AtomicBool.html\" title=\"struct portable_atomic::AtomicBool\">AtomicBool</a>"],["impl Default for <a class=\"struct\" href=\"portable_atomic/struct.AtomicUsize.html\" title=\"struct portable_atomic::AtomicUsize\">AtomicUsize</a>"],["impl Default for <a class=\"struct\" href=\"portable_atomic/struct.AtomicU32.html\" title=\"struct portable_atomic::AtomicU32\">AtomicU32</a>"],["impl Default for <a class=\"struct\" href=\"portable_atomic/struct.AtomicI32.html\" title=\"struct portable_atomic::AtomicI32\">AtomicI32</a>"],["impl Default for <a class=\"struct\" href=\"portable_atomic/struct.AtomicIsize.html\" title=\"struct portable_atomic::AtomicIsize\">AtomicIsize</a>"],["impl Default for <a class=\"struct\" href=\"portable_atomic/struct.AtomicU16.html\" title=\"struct portable_atomic::AtomicU16\">AtomicU16</a>"],["impl&lt;T&gt; Default for <a class=\"struct\" href=\"portable_atomic/struct.AtomicPtr.html\" title=\"struct portable_atomic::AtomicPtr\">AtomicPtr</a>&lt;T&gt;"],["impl Default for <a class=\"struct\" href=\"portable_atomic/struct.AtomicU8.html\" title=\"struct portable_atomic::AtomicU8\">AtomicU8</a>"],["impl Default for <a class=\"struct\" href=\"portable_atomic/struct.AtomicI8.html\" title=\"struct portable_atomic::AtomicI8\">AtomicI8</a>"],["impl Default for <a class=\"struct\" href=\"portable_atomic/struct.AtomicI16.html\" title=\"struct portable_atomic::AtomicI16\">AtomicI16</a>"]],
"spin":[["impl&lt;T: ?Sized + Default, R&gt; Default for <a class=\"struct\" href=\"spin/mutex/spin/struct.SpinMutex.html\" title=\"struct spin::mutex::spin::SpinMutex\">SpinMutex</a>&lt;T, R&gt;"],["impl&lt;T, R&gt; Default for <a class=\"struct\" href=\"spin/once/struct.Once.html\" title=\"struct spin::once::Once\">Once</a>&lt;T, R&gt;"],["impl&lt;T: Default, R&gt; Default for <a class=\"struct\" href=\"spin/lazy/struct.Lazy.html\" title=\"struct spin::lazy::Lazy\">Lazy</a>&lt;T, fn() -&gt; T, R&gt;"],["impl&lt;T: ?Sized + Default, R&gt; Default for <a class=\"struct\" href=\"spin/rwlock/struct.RwLock.html\" title=\"struct spin::rwlock::RwLock\">RwLock</a>&lt;T, R&gt;"],["impl&lt;T: ?Sized + Default, R&gt; Default for <a class=\"struct\" href=\"spin/mutex/struct.Mutex.html\" title=\"struct spin::mutex::Mutex\">Mutex</a>&lt;T, R&gt;"]],
"usb_device":[["impl&lt;'a&gt; Default for <a class=\"struct\" href=\"usb_device/device/struct.StringDescriptors.html\" title=\"struct usb_device::device::StringDescriptors\">StringDescriptors</a>&lt;'a&gt;"]],
"xtensa_lx":[["impl&lt;T: Default&gt; Default for <a class=\"struct\" href=\"xtensa_lx/mutex/struct.SpinLockMutex.html\" title=\"struct xtensa_lx::mutex::SpinLockMutex\">SpinLockMutex</a>&lt;T&gt;"],["impl&lt;T: Default&gt; Default for <a class=\"struct\" href=\"xtensa_lx/mutex/struct.CriticalSectionSpinLockMutex.html\" title=\"struct xtensa_lx::mutex::CriticalSectionSpinLockMutex\">CriticalSectionSpinLockMutex</a>&lt;T&gt;"],["impl&lt;T: Default&gt; Default for <a class=\"struct\" href=\"xtensa_lx/mutex/struct.CriticalSectionMutex.html\" title=\"struct xtensa_lx::mutex::CriticalSectionMutex\">CriticalSectionMutex</a>&lt;T&gt;"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()